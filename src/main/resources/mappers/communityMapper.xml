<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.rscamper.CommunityMapper">

	<resultMap type="CommunityVO" id="CommunityVOMap">
		<result column="BOARD_NO" property="boardNo" />
		<result column="VIEW_CNT" property="viewCnt" />
		<result column="REG_DATE" property="regDate" />
		
		<result column="CATEGORY_NO" property="categoryNo" />
		<result column="CATEGORY_NAME" property="categoryName" />
		
		<result column="USER_UID" property="userUid" />
		<result column="PHOTO_URL" property="photoUrl" />
		<result column="DISPLAY_NAME" property="displayName" />
		<result column="PROVIDER_UID" property="providerUid" />
		<result column="PROVIDER_NAME" property="providerName" />
		<result column="PROVIDER_DISPLAY_NAME" property="providerDisplayName" />
		<result column="PROVIDER_PHOTO_URL" property="providerPhotoUrl" />
		<result column="PROVIDER_EMAIL" property="providerEmail" />
		<result column="BGPHOTO_URL" property="bgPhotoUrl" />
		<result column="PHONE_NUMBER" property="phoneNumber" />
		<result column="WEBSITE_URL" property="websiteUrl" />
		
		<result column="LOCATION_NO" property="locationNo" />
		<result column="LOCATION_NAME" property="locationName" />
		
		<result column="COMMENT_CNT" property="commentCnt"/>
		<result column="LIKE_CNT" property="likeCnt"/>
	</resultMap>
	
	<resultMap type="CommentVO" id="CommentVOMap">
		<result column="COMMENT_NO" property="commentNo" />
		<result column="TARGET_COMMENT_NO" property="targetCommentNo" />
		<result column="BOARD_NO" property="boardNo" />
		<result column="CONTENT" property="content" />
		<result column="REG_DATE" property="regDate" />
	
		<result column="USER_UID" property="userUid" />
		<result column="PHOTO_URL" property="photoUrl" />
		<result column="DISPLAY_NAME" property="displayName" />
		<result column="PROVIDER_UID" property="providerUid" />
		<result column="PROVIDER_NAME" property="providerName" />
		<result column="PROVIDER_DISPLAY_NAME" property="providerDisplayName" />
		<result column="PROVIDER_PHOTO_URL" property="providerPhotoUrl" />
		<result column="PROVIDER_EMAIL" property="providerEmail" />
		<result column="BGPHOTO_URL" property="bgPhotoUrl" />
		<result column="PHONE_NUMBER" property="phoneNumber" />
		<result column="WEBSITE_URL" property="websiteUrl" />
		
		<result column="LOCATION_NO" property="locationNo" />
		<result column="LOCATION_NAME" property="locationName" />
	</resultMap>
	
	<resultMap type="BoardLikeVO" id="BoardLikeVOMap">
		<result column="TARGET_NO" property="targetNo"/>
		<result column="TARGET_TYPE" property="targetType"/>
		<result column="USER_UID" property="userUid"/>
		<result column="REG_DATE" property="regDate"/>
	</resultMap>
	
	<resultMap type="BoardBookMarkVO" id="BoardBookMarkVOMap">
		<result column="TARGET_NO" property="targetNo"/>
		<result column="TARGET_TYPE" property="targetType"/>
		<result column="USER_UID" property="userUid"/>
		<result column="REG_DATE" property="regDate"/>
	</resultMap>
	
	<select id="selectCommunityList" resultMap="CommunityVOMap" parameterType="hashMap">
		SELECT *, 
			(SELECT COUNT(*) FROM BOARD_COMMENT_TB BC WHERE BC.BOARD_NO=B.BOARD_NO) COMMENT_CNT, 
			(SELECT COUNT(*) FROM BOARD_LIKE_TB LIKETB WHERE LIKETB.TARGET_NO=B.BOARD_NO AND LIKETB.TARGET_TYPE=1) LIKE_CNT
		FROM BOARD_TB B, BOARD_CATEGORY_TB C, USER_TB U, LOCATION_TB L
		WHERE C.CATEGORY_NO = B.CATEGORY_NO 
			AND B.USER_UID = U.USER_UID 
			AND U.LOCATION_NO = L.LOCATION_NO
		ORDER BY BOARD_NO DESC
		LIMIT #{page}, #{count}
	</select>
	
	<select id="selectCommunityListByCategoryNo" resultMap="CommunityVOMap" parameterType="hashMap">
		SELECT *, 
			(SELECT COUNT(*) FROM BOARD_COMMENT_TB BC WHERE BC.BOARD_NO=B.BOARD_NO) COMMENT_CNT, 
			(SELECT COUNT(*) FROM BOARD_LIKE_TB LIKETB WHERE LIKETB.TARGET_NO=B.BOARD_NO AND LIKETB.TARGET_TYPE=1) LIKE_CNT
		FROM BOARD_TB B, BOARD_CATEGORY_TB C, USER_TB U, LOCATION_TB L
		WHERE C.CATEGORY_NO = B.CATEGORY_NO 
			AND B.USER_UID = U.USER_UID 
			AND U.LOCATION_NO = L.LOCATION_NO
			AND B.CATEGORY_NO = #{categoryNo}
		ORDER BY BOARD_NO DESC
		LIMIT #{page}, #{count}
	</select>
	
	<select id="selectCommunityTotalPages" resultType="int">
		SELECT COUNT(*)
		FROM BOARD_TB
	</select>
	
	
	<select id="selectCommunityTotalPagesByCategoryNo" resultType="int" parameterType="int">
		SELECT COUNT(*)
		FROM BOARD_TB
		WHERE CATEGORY_NO = #{categoryNo}
	</select>
	
	<select id="selectCommunity" resultMap="CommunityVOMap" parameterType="int">
		SELECT *, 
			(SELECT COUNT(*) FROM BOARD_COMMENT_TB BC WHERE BC.BOARD_NO=B.BOARD_NO) COMMENT_CNT, 
			(SELECT COUNT(*) FROM BOARD_LIKE_TB LIKETB WHERE LIKETB.TARGET_NO=B.BOARD_NO AND LIKETB.TARGET_TYPE=1) LIKE_CNT
		FROM BOARD_TB B, BOARD_CATEGORY_TB C, USER_TB U, LOCATION_TB L
		WHERE C.CATEGORY_NO = B.CATEGORY_NO 
			AND B.USER_UID = U.USER_UID 
			AND U.LOCATION_NO = L.LOCATION_NO
			AND BOARD_NO = #{boardNo}
	</select>
	
	<select id="selectCategoryList" resultMap="CommunityVOMap">
		SELECT *
		FROM BOARD_CATEGORY_TB
		WHERE CATEGORY_NO &lt;= 5
	</select>
	
	<insert id="insertBoard" parameterType="CommunityVO">
		INSERT INTO BOARD_TB (CATEGORY_NO, USER_UID, TITLE, CONTENT)
		VALUES (#{categoryNo}, #{userUid}, #{title}, #{content})
	</insert>
	
	<update id="updateBoardByBoardNo" parameterType="CommunityVO">
		UPDATE BOARD_TB 
		SET TITLE = #{title}, CONTENT = #{content}, CATEGORY_NO = #{categoryNo}
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<delete id="deleteBoardByBoardNo" parameterType="int">
		DELETE FROM BOARD_TB
		WHERE BOARD_NO = #{boardNo}
	</delete>
	
	<select id="selectCommentList" resultMap="CommentVOMap" parameterType="hashMap">
		SELECT *
		FROM BOARD_COMMENT_TB C, USER_TB U, LOCATION_TB L
		WHERE C.USER_UID = U.USER_UID
        AND U.LOCATION_NO = L.LOCATION_NO
		AND BOARD_NO = #{boardNo} 
		ORDER BY COMMENT_NO
		LIMIT #{page}, #{count}
	</select>
	
	<select id="selectCommentTotalPages" resultType="int">
		SELECT COUNT(*)
		FROM BOARD_COMMENT_TB
		WHERE BOARD_NO = #{boardNo}
	</select>
	
	<insert id="insertComment" parameterType="CommentVO">
		INSERT INTO BOARD_COMMENT_TB (TARGET_COMMENT_NO, BOARD_NO, USER_UID, CONTENT)
		VALUES (#{targetCommentNo}, #{boardNo}, #{userUid}, #{content})
	</insert>
	
	<update id="updateCommentByCommentNo" parameterType="CommentVO">
		UPDATE BOARD_COMMENT_TB 
		SET CONTENT = #{content}
		WHERE COMMENT_NO = #{commentNo}
	</update>
	
	<delete id="deleteCommentByCommentNo" parameterType="int">
		DELETE FROM BOARD_COMMENT_TB
		WHERE COMMENT_NO = #{commentNo}
	</delete>
	
	<select id="selectBoardLike" parameterType="BoardLikeVO" resultType="int">
		SELECT COUNT(*)
		FROM BOARD_LIKE_TB
		WHERE TARGET_NO = #{targetNo} AND TARGET_TYPE = #{targetType} AND USER_UID = #{userUid}
	</select>
	
	<insert id="insertBoardLike" parameterType="BoardLikeVO">
		INSERT INTO BOARD_LIKE_TB (TARGET_NO, TARGET_TYPE, USER_UID)
		VALUES (#{targetNo}, #{targetType}, #{userUid})
	</insert>
	
	<delete id="deleteBoardLike" parameterType="BoardLikeVO">
		DELETE FROM BOARD_LIKE_TB
		WHERE TARGET_NO = #{targetNo} AND TARGET_TYPE = #{targetType} AND USER_UID = #{userUid}
	</delete>
	
	<select id="selectBoardBookMark" parameterType="BoardBookMarkVO" resultType="int">
		SELECT COUNT(*)
		FROM BOARD_BOOKMARK_TB
		WHERE TARGET_NO = #{targetNo} AND TARGET_TYPE = #{targetType} AND USER_UID = #{userUid}
	</select>
	
	<insert id="insertBoardBookMark" parameterType="BoardBookMarkVO">
		INSERT INTO BOARD_BOOKMARK_TB (TARGET_NO, TARGET_TYPE, USER_UID)
		VALUES (#{targetNo}, #{targetType}, #{userUid})
	</insert>
	
	<delete id="deleteBoardBookMark" parameterType="BoardBookMarkVO">
		DELETE FROM BOARD_BOOKMARK_TB
		WHERE TARGET_NO = #{targetNo} AND TARGET_TYPE = #{targetType} AND USER_UID = #{userUid}
	</delete>

</mapper>